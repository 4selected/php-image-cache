<?php class ImageCache { private $root; private $src_root; private $created_dir; private $opts; private $base; public function __construct($filebase = '', $dir = null, $create_dir = true, $opts = array()) { $defaults = array( 'quality' => 90, 'compressed_dir' => '/compressed' ); if(is_null($dir)) $dir = dirname(__FILE__); $this->root = $dir; $this->src_root = $dir; $this->base = $filebase; $this->opts = array_merge($defaults, $opts); if(!$create_dir) return $this; $this->createDirectory(); return $this; } public function createDirectory() { if(!is_dir($this->root . $this->opts['compressed_dir'])) { try { $pathinfo = pathinfo($this->root . $this->opts['compressed_dir']); chmod($pathinfo['dirname'], 0777); mkdir($this->root . $this->opts['compressed_dir'], 0777); $this->root .= $this->opts['compressed_dir']; $this->created_dir = true; return $this; } catch(Exception $e) { echo 'There was an error creating the new directory:' . "\n"; $this->debug($e); } } $this->root .= $this->opts['compressed_dir']; $this->created_dir = true; return $this; } public function compress($src) { $src = $this->src_root . '/' . $src; $filename = $this->getFilename($src); $dest = $filename . '-compressed.jpg'; if($out = $this->checkExists($dest)) return $out; $info = getimagesize($src); switch($info['mime']) { case 'image/jpeg' : $image = imagecreatefromjpeg($src); break; case 'image/gif' : $image = imagecreatefromgif($src); break; case 'image/png' : $image = imagecreatefrompng($src); break; } if($this->created_dir) $dest = $this->root . '/' . $dest; imagejpeg($image, $dest, $this->opts['quality']); $info = getimagesize($dest); $path = pathinfo($dest); $src = '/' . end(explode('/', $path['dirname'])) . '/' . $path['basename']; $src .= '?modtime=' . filemtime($this->root . '/' . $path['basename']); $out = array( 'src' => $this->base . $src, 'width' => $info[0], 'height' => $info[1] ); return $out; } private function checkExists($img) { if(file_exists($this->root . '/' . $img)) { $info = getimagesize($this->root . '/' . $img); $path = pathinfo($this->root . '/' . $img); $src = '/' . end(explode('/', $path['dirname'])) . '/' . $path['basename']; $src .= '?modtime=' . filemtime($this->root . '/' . $path['basename']); $out = array( 'src' => $this->base . $src, 'width' => $info[0], 'height' => $info[1] ); return $out; } return false; } public function getFilename($file) { $pathinfo = pathinfo($file); $filename = $pathinfo['filename']; return $filename; } private function debug($a) { echo '<pre>'; print_r($a); echo '</pre><hr>'; } } ?>